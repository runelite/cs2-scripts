// 730
[proc,script730](component $widget_64:3_0)
def_struct $struct1 = enum(int, struct, enum_2670, %varbit10032);
def_enum $enum2 = struct_param($struct1, param_1857);
def_enum $enum3 = struct_param($struct1, param_2041);
if ($enum2 = null) {
	return;
}
def_int $width4 = if_getwidth($widget_64:3_0);
def_int $int5 = 0;
def_int $int6 = 0;
def_int $count7 = enum_getoutputcount($enum2);
def_string $string0 = "";
def_int $int8 = 0;
def_int $int9 = 0;
def_int $int10 = 0;
def_int $int11 = 0;
def_int $int12 = 0;
def_int $int13 = 0;
def_int $int14 = 0;
def_int $int15 = 0;
def_int $int16 = 0;
def_component $component17 = null;
def_int $trans18 = 220;
def_int $int19 = calc(if_getheight(interface_64:5) / $count7);
if (cc_find($widget_64:3_0, 0) = ^false) {
	cc_create($widget_64:3_0, ^iftype_rectangle, $int5);
	cc_setsize(calc($width4 - 4), 29, ^setsize_abs, ^setsize_abs);
	cc_setposition(2, 2, ^setpos_abs_left, ^setpos_abs_top);
	cc_setfill(false);
	cc_setcolour(0x474745);
	$int5 = calc($int5 + 1);
	cc_create($widget_64:3_0, ^iftype_graphic, $int5);
	cc_setsize(calc($width4 - 6), 27, ^setsize_abs, ^setsize_abs);
	cc_setposition(3, 3, ^setpos_abs_left, ^setpos_abs_top);
	cc_setgraphic(struct_param($struct1, param_1025));
	cc_settiling(true);
	$int5 = calc($int5 + 1);
	cc_create($widget_64:3_0, ^iftype_graphic, $int5);
	cc_setsize(1, 27, ^setsize_abs, ^setsize_abs);
	cc_setposition(3, 3, ^setpos_abs_left, ^setpos_abs_top);
	cc_setgraphic(struct_param($struct1, param_1024));
	cc_settiling(true);
	$int5 = calc($int5 + 1);
	$int15 = enum(int, int, $enum2, calc($count7 - 1));
	while ($int6 < $count7) {
		$int8 = enum(int, int, $enum2, $int6);
		$int9 = enum(int, int, $enum2, calc(1 + $int6));
		$int10 = enum(int, int, $enum2, calc($int6 - 1));
		$int13 = 0;
		if ($int9 > 0 & %var2614 >= $int9) {
			if ($int10 > 0) {
				$int13 = 1;
			}
			$int11 = 1;
			$int12 = 1;
		} else if (%var2614 >= $int8) {
			if ($int10 > 0) {
				$int13 = 1;
			}
			$int11 = 1;
			$int12 = 0;
		} else {
			if ($int10 > 0 & %var2614 >= $int10) {
				$int13 = 1;
			}
			$int11 = 0;
			$int12 = 0;
		}
		cc_create($widget_64:3_0, ^iftype_graphic, $int5);
		$int5 = calc($int5 + 1);
		cc_setsize(10, 31, ^setsize_abs, ^setsize_abs);
		$int14 = scale($int8, $int15, calc($width4 - 4));
		if ($int14 <= 2) {
			$int14 = 0;
		} else if ($int14 >= calc($width4 - 4)) {
			$int14 = $width4;
		} else {
			$int14 = calc($int14 + 2);
		}
		cc_setposition(calc($int14 - 4), 1, ^setpos_abs_left, ^setpos_abs_top);
		cc_setgraphic(struct_param($struct1, param_1031));
		if ($int11 = 0 & compare($string0, "") = 0) {
			if (calc($int8 - %var2614) = 1) {
				$string0 = "Next rank after 1 point.";
			} else {
				$string0 = "Next rank after <tostring(calc($int8 - %var2614))> points.";
			}
		}
		$component17 = enum(int, component, enum_5200, $int6);
		if_setsize(0, $int19, ^setsize_minus, ^setsize_abs, $component17);
		if_setposition(0, calc($int19 * $int6), ^setpos_abs_left, ^setpos_abs_bottom, $component17);
		cc_create($component17, ^iftype_rectangle, 0);
		cc_setsize(0, 0, ^setsize_minus, ^setsize_minus);
		cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top);
		cc_setfill(true);
		if ($int12 = 1) {
			cc_setcolour(0xbbbbbb);
		} else if ($int11 = 1) {
			cc_setcolour(0x0dc10d);
		} else if ($int13 = 1 | $int6 = 0) {
			cc_setcolour(^black);
		} else {
			cc_setcolour(^black);
		}
		cc_settrans($trans18);
		cc_create($component17, ^iftype_graphic, 1);
		cc_setobject(enum(int, namedobj, $enum3, $int6), 1);
		cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
		cc_setposition(5, 0, ^setpos_abs_left, ^setpos_abs_centre);
		cc_create($component17, ^iftype_text, 2);
		cc_setsize(calc(36 + 15), 0, ^setsize_minus, ^setsize_minus);
		cc_setposition(calc(36 + 10), 0, ^setpos_abs_left, ^setpos_abs_top);
		cc_settextfont(struct_param($struct1, param_1032));
		cc_settextshadow(struct_param($struct1, param_1030));
		cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
		if ($int12 = 1) {
			cc_setcolour(0xbbbbbb);
		} else if ($int11 = 1) {
			cc_setcolour(0x0dc10d);
		} else if ($int13 = 1 | $int6 = 0) {
			cc_setcolour(struct_param($struct1, param_1029));
		} else {
			cc_setcolour(0x808080);
		}
		cc_settext("<enum(int, string, enum_5201, $int6)> - <~tostring_spacer($int8, ",")> points");
		if ($int11 = 1 & $int12 = 0) {
			cc_create($component17, ^iftype_graphic, 3);
			cc_setgraphic("close_arrows,0");
			cc_setsize(26, 26, ^setsize_abs, ^setsize_abs);
			cc_setposition(calc(36 + 20 + parawidth("<enum(int, string, enum_5201, $int6)> - <~tostring_spacer($int8, ",")> points", 500, p11_full) / 2), 0, ^setpos_abs_centre, ^setpos_abs_centre);
			cc_setontimer("cc_flash_component_timer(event_com, event_comsubid, 0, 1)");
		}
		$int6 = calc($int6 + 1);
		if ($trans18 = 220) {
			$trans18 = 200;
		} else {
			$trans18 = 220;
		}
	}
	cc_create($widget_64:3_0, ^iftype_text, $int5);
	cc_setsize(calc($width4 - 2), 2, ^setsize_abs, ^setsize_minus);
	cc_setposition(1, 1, ^setpos_abs_left, ^setpos_abs_top);
	cc_settextfont(struct_param($struct1, param_1032));
	cc_settextshadow(struct_param($struct1, param_1030));
	cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
	cc_setcolour(struct_param($struct1, param_1029));
	if (compare($string0, "") = 0) {
		cc_settext("Max rank achieved!");
	} else {
		cc_settext($string0);
	}
	$int16 = $int5;
	$int5 = calc($int5 + 1);
	cc_create($widget_64:3_0, ^iftype_rectangle, $int5);
	cc_setsize($width4, 33, ^setsize_abs, ^setsize_abs);
	cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top);
	cc_setfill(false);
	cc_setcolour(0x0e0e0c);
	$int5 = calc($int5 + 1);
	cc_create($widget_64:3_0, ^iftype_rectangle, $int5);
	cc_setsize(calc($width4 - 2), 31, ^setsize_abs, ^setsize_abs);
	cc_setposition(1, 1, ^setpos_abs_left, ^setpos_abs_top);
	cc_setfill(false);
	cc_setcolour(0x0e0e0c);
	$int5 = calc($int5 + 1);
}
def_int $width20 = calc($width4 - 4);
def_int $width21 = calc($width20 - 2);
if ($int15 ! -1 & $int15 > 0) {
	$width21 = scale(%var2614, $int15, $width20);
}
if ($width21 > $width20) {
	$width21 = calc($width20 - 1);
}
if (cc_find($widget_64:3_0, 2) = ^true) {
	cc_setsize($width21, cc_getheight, ^setsize_abs, ^setsize_abs);
}
