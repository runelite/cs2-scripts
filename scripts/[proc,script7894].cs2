// 7894
[proc,script7894](int $int0, int $int1)(int, namedobj, string)
def_string $string0 = "";
if (%option_skill_guide = 0) {
	$string0 = "<col=6f0000>";
} else {
	$string0 = "<col=ffffff>";
}
switch_int ($int0) {
	case 0 :
		switch_int ($int1) {
			case 0 :
				return(-1, cooking_pot_977, "Cooking is a skill that lets you make all kinds of delicious food that will typically restore your Hitpoints, amongst providing other benefits.");
			case 1 :
				return(-1, shrimp_315, "At its most basic, Cooking can be done by simply taking raw meats and fish to either a fire or a range. You'll get better results overall if you use a range, though.");
			case 2 :
				return(-1, bread_2309, "Some foods will require you to prepare your ingredients before you can cook them. For example, you first need to mix flour and water into a dough before you can bake them into bread.");
			case 3 :
				return(-1, lobster_379, "As your Cooking level increases, you'll get access to an increasing list of recipes. You'll also find that you accidentally burn your food less of the time as well.");
		}
	case 1 :
		switch_int ($int1) {
			case 0 :
				return(1, cooked_meat_2142, "Meat");
			case 1 :
				return(1, xbows_sinew_9436, "Members: Sinew<br>(made by drying beef or bear meat on a range)");
			case 2 :
				return(1, shrimp_315, "Shrimp");
			case 3 :
				return(1, cooked_chicken_2140, "Chicken");
			case 4 :
				return(1, cooked_rabbit_3228, "Members: Rabbit");
			case 5 :
				return(1, anchovies_319, "Anchovies");
			case 6 :
				return(1, sardine_325, "Sardine");
			case 7 :
				return(1, tbwt_poorly_cooked_karambwan_3146, "Members: Karambwan");
			case 8 :
				return(1, ugthanki_kebab_1885, "Members: Ugthanki kebab");
			case 9 :
				return(5, herring_347, "Herring");
			case 10 :
				return(10, mackerel_355, "Members: Mackerel");
			case 11 :
				return(11, spit_roasted_bird_meat_9980, "Members: Roasted bird meat");
			case 12 :
				return(12, snail_corpse_cooked1_3369, "Members: Thin snail");
			case 13 :
				return(15, trout_333, "Trout");
			case 14 :
				return(16, tbw_spider_on_stick_cooked_6297, "Members: Spider");
			case 15 :
				return(16, spit_roasted_rabbit_meat_7223, "Members: Roasted rabbit");
			case 16 :
				return(17, snail_corpse_cooked2_3371, "Members: Lean snail");
			case 17 :
				return(18, cod_339, "Members: Cod");
			case 18 :
				return(20, pike_351, "Pike");
			case 19 :
				return(21, spit_roasted_beast_meat_9988, "Members: Roasted beast meat");
			case 20 :
				return(21, hundred_pirate_giant_crab_meat_5_7521, "Members: Giant crab meat");
			case 21 :
				return(22, snail_corpse_cooked3_3373, "Members: Fat snail");
			case 22 :
				return(23, wildkebbit_cooked_29128, "Members: Wild kebbit");
			case 23 :
				return(25, salmon_329, "Salmon");
			case 24 :
				return(28, mort_slimey_eel_cooked_3381, "Members: Slimy eel");
			case 25 :
				return(30, tuna_361, "Tuna");
			case 26 :
				return(30, cooked_chompy_2878, "Members: Roasted chompy");
			case 27 :
				return(30, cooked_lizard_29077, "Members: Mossy Lizard");
			case 28 :
				return(30, bream_fish_cooked_29217, "Members: Bream");
			case 29 :
				return(31, hundred_pirate_fishcake_7530, "Members: Fishcakes");
			case 30 :
				return(31, larupia_cooked_29146, "Members: Larupia");
			case 31 :
				return(32, barbkebbit_cooked_29131, "Members: Barb-tailed kebbit");
			case 32 :
				return(35, hunting_fish_special_10136, "Members: Rainbow fish");
			case 33 :
				return(35, forestry_ration_28157, "Members: Forester's ration<br>(with 35 Woodcutting)");
			case 34 :
				return(38, cave_eel_5003, "Members: Cave eel");
			case 35 :
				return(40, lobster_379, "Lobster");
			case 36 :
				return(41, 100_jubbly_meat_cooked_7568, "Members: Jubbly");
			case 37 :
				return(41, graahk_cooked_29149, "Members: Graahk");
			case 38 :
				return(43, bass_365, "Members: Bass");
			case 39 :
				return(45, swordfish_373, "Swordfish");
			case 40 :
				return(51, kyatt_cooked_29152, "Members: Kyatt");
			case 41 :
				return(53, lava_eel_2149, "Members: Lava eel");
			case 42 :
				return(59, fennecfox_cooked_29137, "Members: Pyre fox");
			case 43 :
				return(62, monkfish_7946, "Members: Monkfish");
			case 44 :
				return(68, antelopesun_cooked_29140, "Members: Sunlight antelope");
			case 45 :
				return(72, snakeboss_eel_13339, "Members: Dissect sacred eels");
			case 46 :
				return(80, shark_385, "Members: Shark");
			case 47 :
				return(82, seaturtle_397, "Members: Sea turtle");
			case 48 :
				return(82, dashingkebbit_cooked_29134, "Members: Dashing kebbit");
			case 49 :
				return(84, anglerfish_13441, "Members: Anglerfish");
			case 50 :
				return(90, dark_crab_11936, "Members: Dark crab");
			case 51 :
				return(91, mantaray_391, "Members: Manta ray");
			case 52 :
				return(92, antelopemoon_cooked_29143, "Members: Moonlight antelope");
			case default :
				return(-1, null, "");
		}
	case 2 :
		switch_int ($int1) {
			case 0 :
				return(1, bread_2309, "Bread");
			case 1 :
				return(58, pitta_bread_1865, "Members: Pitta bread");
			case 2 :
				return(-1, invis_rod_7620, "1. Pick some grain and take it to a windmill to make flour.");
			case 3 :
				return(-1, invis_rod_7620, "2. Use a pot to collect the flour you have made.");
			case 4 :
				return(-1, invis_rod_7620, "3. Fill a bucket or jug with water from a sink or fountain.");
			case 5 :
				return(-1, invis_rod_7620, "4. Mix the flour and water to make some bread dough.");
			case 6 :
				return(-1, invis_rod_7620, "5. Cook the dough by using it with a stove.");
			case default :
				return(-1, null, "");
		}
	case 3 :
		switch_int ($int1) {
			case 0 :
				return(10, redberry_pie_2325, "Redberry pie");
			case 1 :
				return(20, meat_pie_2327, "Meat pie");
			case 2 :
				return(29, mud_pie_7170, "Members: Mud pie");
			case 3 :
				return(30, apple_pie_2323, "Apple pie");
			case 4 :
				return(34, garden_pie_7178, "Members: Garden pie");
			case 5 :
				return(47, fish_pie_7188, "Members: Fish pie");
			case 6 :
				return(52, botanical_pie_19662, "Members: Botanical pie");
			case 7 :
				return(60, mushroom_pie_21690, "Members: Mushroom pie");
			case 8 :
				return(70, admiral_pie_7198, "Members: Admiral pie");
			case 9 :
				return(73, dragonfruit_pie_22795, "Members: Dragonfruit pie");
			case 10 :
				return(85, wild_pie_7208, "Members: Wild pie");
			case 11 :
				return(95, summer_pie_7218, "Members: Summer pie");
			case 12 :
				return(-1, invis_rod_7620, "To make a pie:");
			case 13 :
				return(-1, invis_rod_7620, "1. Mix flour and water to make pastry dough.");
			case 14 :
				return(-1, invis_rod_7620, "2. Place the dough in an empty pie dish.");
			case 15 :
				return(-1, invis_rod_7620, "3. Use your choice of filling with the empty pie (refer to pie recipe book).");
			case 16 :
				return(-1, invis_rod_7620, "4. Cook the pie by using it with a stove.");
			case default :
				return(-1, null, "");
		}
	case 4 :
		switch_int ($int1) {
			case 0 :
				return(25, stew_2003, "Stew");
			case 1 :
				return(60, curry_2011, "Members: Curry");
			case 2 :
				return(-1, invis_rod_7620, "To make stew:");
			case 3 :
				return(-1, invis_rod_7620, "1. Obtain a bowl and fill it with water from a sink or fountain.");
			case 4 :
				return(-1, invis_rod_7620, "2. Pick a potato and place it in the bowl.");
			case 5 :
				return(-1, invis_rod_7620, "3. Cook some meat and place it in the bowl.");
			case 6 :
				return(-1, invis_rod_7620, "4. Cook the stew by using it with a stove or fire.");
			case 7 :
				return(-1, invis_rod_7620, "After completing Evil Dave's miniquest<br>from Recipe for Disaster, I can add<br>spices to cooked stew.");
			case 8 :
				return(-1, invis_rod_7620, "To make curry: make uncooked stew as above. Before cooking, add some spices or 3 curry leaves.");
			case default :
				return(-1, null, "");
		}
	case 5 :
		switch_int ($int1) {
			case 0 :
				return(35, plain_pizza_2289, "Plain pizza");
			case 1 :
				return(45, meat_pizza_2293, "Meat pizza");
			case 2 :
				return(55, anchovie_pizza_2297, "Anchovy pizza");
			case 3 :
				return(65, pineapple_pizza_2301, "Members: Pineapple pizza");
			case 4 :
				return(-1, invis_rod_7620, "To make a pizza:");
			case 5 :
				return(-1, invis_rod_7620, "1. Mix flour and water to make a pizza base.");
			case 6 :
				return(-1, invis_rod_7620, "2. Add a tomato to the pizza.");
			case 7 :
				return(-1, invis_rod_7620, "3. Add some cheese to the pizza.");
			case 8 :
				return(-1, invis_rod_7620, "4. Cook the pizza by using it with a stove.");
			case 9 :
				return(-1, invis_rod_7620, "5. Add your choice of topping to the pizza.");
			case default :
				return(-1, null, "");
		}
	case 6 :
		switch_int ($int1) {
			case 0 :
				return(40, cake_1891, "Cake");
			case 1 :
				return(50, chocolate_cake_1897, "Chocolate cake");
			case 2 :
				return(-1, invis_rod_7620, "To make a cake:");
			case 3 :
				return(-1, invis_rod_7620, "1. Mix flour, eggs and milk together in a cake tin.");
			case 4 :
				return(-1, invis_rod_7620, "2. Cook the cake by using it with a stove.");
			case 5 :
				return(-1, invis_rod_7620, "3. Optional: Buy some chocolate and add it to the cake to make a chocolate cake.");
			case default :
				return(-1, null, "");
		}
	case 7 :
		switch_int ($int1) {
			case 0 :
				return(35, jug_wine_1993, "Wine");
			case 1 :
				return(65, wine_of_zamorak_245, "Members: Wine of Zamorak");
			case 2 :
				return(-1, invis_rod_7620, "To make wine:");
			case 3 :
				return(-1, invis_rod_7620, "1. Fill a jug with water.");
			case 4 :
				return(-1, invis_rod_7620, "2. Use grapes with the jug of water.");
			case 5 :
				return(-1, invis_rod_7620, "3. Wait until the wine ferments.");
			case 6 :
				return(-1, invis_rod_7620, "Wine will ferment when left in<br>your inventory or the bank.");
			case default :
				return(-1, null, "");
		}
	case 8 :
		switch_int ($int1) {
			case 0 :
				return(20, cup_of_nettletea_4242, "Nettle tea");
			case 1 :
				return(-1, invis_rod_7620, "To make nettle tea:");
			case 2 :
				return(-1, invis_rod_7620, "1. Fill a bowl with water.");
			case 3 :
				return(-1, invis_rod_7620, "2. Put some picked nettles into the bowl of water.");
			case 4 :
				return(-1, invis_rod_7620, "3. Boil the nettle-water by using it with a range or a fire.");
			case 5 :
				return(-1, invis_rod_7620, "4. Use the bowl of nettle tea with a cup.");
			case 6 :
				return(-1, invis_rod_7620, "5. If you take milk, use a bucket of milk on the nettle tea.");
			case default :
				return(-1, null, "");
		}
	case 9 :
		switch_int ($int1) {
			case 0 :
				return(14, cider_5763, "Cider<br>4 Apple mush");
			case 1 :
				return(19, dwarven_stout_1913, "Dwarven Stout<br>4 Hammerstone hops");
			case 2 :
				return(24, asgarnian_ale_1905, "Asgarnian Ale<br>4 Asgarnian hops");
			case 3 :
				return(29, greenmans_ale_1909, "Greenman's Ale<br>4 Harralander leaves");
			case 4 :
				return(34, wizards_mind_bomb_1907, "Wizard's Mind Bomb<br>4 Yanillian hops");
			case 5 :
				return(39, dragon_bitter_1911, "Dragon Bitter<br>4 Krandorian hops");
			case 6 :
				return(44, moonlight_mead_2955, "Moonlight Mead<br>4 Bittercap mushrooms");
			case 7 :
				return(49, axemans_folly_5751, "Axeman's Folly<br>1 Oak root");
			case 8 :
				return(54, chefs_delight_5755, "Chef's Delight<br>4 Portions of chocolate dust");
			case 9 :
				return(59, slayers_respite_5759, "Slayer's Respite<br>4 Wildblood hops");
			case default :
				return(-1, null, "");
		}
	case 10 :
		switch_int ($int1) {
			case 0 :
				return(7, potato_baked_6701, "Baked potato");
			case 1 :
				return(9, bowl_chilli_7072, "Spicy sauce (topping ingredient)");
			case 2 :
				return(11, bowl_chilli+carne_7062, "Chilli con carne (topping)");
			case 3 :
				return(13, bowl_egg_scrambled_7078, "Scrambled egg (topping ingredient)");
			case 4 :
				return(23, bowl_egg+tomato_7064, "Scrambled egg and tomato (topping)");
			case 5 :
				return(28, sweetcorn_cooked_5988, "Sweetcorn");
			case 6 :
				return(39, potato_butter_6703, "Baked potato with butter");
			case 7 :
				return(41, potato_chilli+carne_7054, "Baked potato with chilli con carne");
			case 8 :
				return(42, bowl_onion_fried_7084, "Fried onion (topping ingredient)");
			case 9 :
				return(46, bowl_mushroom_fried_7082, "Fried mushroom (topping ingredient)");
			case 10 :
				return(47, potato_cheese_6705, "Baked potato with butter and cheese");
			case 11 :
				return(51, potato_egg+tomato_7056, "Baked potato with egg and tomato");
			case 12 :
				return(57, bowl_mushroom+onion_7066, "Fried mushroom and onion (topping)");
			case 13 :
				return(64, potato_mushroom+onion_7058, "Baked potato with mushroom and onion");
			case 14 :
				return(67, bowl_tuna+sweetcorn_7068, "Tuna and sweetcorn (topping)");
			case 15 :
				return(68, potato_tuna+sweetcorn_7060, "Baked potato with tuna and sweetcorn");
			case 16 :
				return(-1, invis_rod_7620, "To make baked potatoes with toppings:");
			case 17 :
				return(-1, invis_rod_7620, "1. Bake the potato on a range.");
			case 18 :
				return(-1, invis_rod_7620, "2. Add some butter.");
			case 19 :
				return(-1, invis_rod_7620, "3. If needed, combine topping ingredients by chopping them into a bowl.");
			case 20 :
				return(-1, invis_rod_7620, "Ingredients for toppings:");
			case 21 :
				return(-1, invis_rod_7620, "1. Chilli con carne: meat & spicy sauce (made from garlic and gnome spice)");
			case 22 :
				return(-1, invis_rod_7620, "2. Egg and tomato: scrambled egg & tomato");
			case 23 :
				return(-1, invis_rod_7620, "3. Mushroom and onion: fried bittercap mushroom & fried onion");
			case 24 :
				return(-1, invis_rod_7620, "4. Tuna and sweetcorn: tuna & cooked sweetcorn");
			case default :
				return(-1, null, "");
		}
	case 11 :
		switch_int ($int1) {
			case 0 :
				return(21, pot_of_cream_2130, "Cream");
			case 1 :
				return(38, pot_of_butter_6697, "Butter");
			case 2 :
				return(48, cheese_1985, "Cheese");
			case 3 :
				return(-1, invis_rod_7620, "To make dairy products:");
			case 4 :
				return(-1, invis_rod_7620, "1. Get a bucket of milk, a pot of cream or a pot of butter.");
			case 5 :
				return(-1, invis_rod_7620, "2. Use the milk, cream or butter in a churn.");
			case 6 :
				return(-1, invis_rod_7620, "3. Milk can be churned into cream, then into butter, then into cheese.");
			case default :
				return(-1, null, "");
		}
	case 12 :
		switch_int ($int1) {
			case 0 :
				return(6, fruit_blast_2084, "Fruit Blast");
			case 1 :
				return(8, pineapple_punch_2048, "Pineapple Punch");
			case 2 :
				return(10, toad_crunchies_2217, "Toad crunchies");
			case 3 :
				return(12, spicy_crunchies_2213, "Spicy crunchies");
			case 4 :
				return(14, worm_crunchies_2205, "Worm crunchies");
			case 5 :
				return(16, chocchip_crunchies_2209, "Chocolate chip crunchies");
			case 6 :
				return(18, wizard_blizzard_2054, "Wizard Blizzard");
			case 7 :
				return(20, sgg_2080, "Short Green Guy (SGG)");
			case 8 :
				return(25, fruit_batta_2277, "Fruit batta");
			case 9 :
				return(26, toad_batta_2255, "Toad batta");
			case 10 :
				return(27, worm_batta_2253, "Worm batta");
			case 11 :
				return(28, vegetable_batta_2281, "Vegetable batta");
			case 12 :
				return(29, cheese+tom_batta_2259, "Cheese and tomato batta");
			case 13 :
				return(30, worm_hole_2191, "Worm hole");
			case 14 :
				return(32, drunk_dragon_2092, "Drunk Dragon");
			case 15 :
				return(33, chocolate_saturday_2074, "Chocolate Saturday");
			case 16 :
				return(35, veg_ball_2195, "Vegetable ball");
			case 17 :
				return(37, blurberry_special_2064, "Blurberry Special");
			case 18 :
				return(40, tangled_toads_legs_2187, "Tangled toads' legs");
			case 19 :
				return(42, chocolate_bomb_2185, "Chocolate bomb");
			case default :
				return(-1, null, "");
		}
	case 13 :
		switch_int ($int1) {
			case 0 :
				return(1, raids_fish0_cooked_20856, "Members: Chambers of Xeric - Pysk fish");
			case 1 :
				return(1, raids_bat0_cooked_20871, "Members: Chambers of Xeric - Guanic bat");
			case 2 :
				return(7, guppy_25654, "Ritual Offering - Guppy");
			case 3 :
				return(15, raids_fish1_cooked_20858, "Members: Chambers of Xeric - Suphi fish");
			case 4 :
				return(15, raids_bat1_cooked_20873, "Members: Chambers of Xeric - Prael bat");
			case 5 :
				return(20, cavefish_25660, "Ritual Offering - Cavefish");
			case 6 :
				return(30, raids_fish2_cooked_20860, "Members: Chambers of Xeric - Leckish fish");
			case 7 :
				return(30, raids_bat2_cooked_20875, "Members: Chambers of Xeric - Giral bat");
			case 8 :
				return(33, tetra_25666, "Ritual Offering - Tetra");
			case 9 :
				return(45, raids_fish3_cooked_20862, "Members: Chambers of Xeric - Brawk fish");
			case 10 :
				return(45, raids_bat3_cooked_20877, "Members: Chambers of Xeric - Phluxia bat");
			case 11 :
				return(46, catfish_25672, "Members: Ritual Offering - Catfish");
			case 12 :
				return(60, raids_fish4_cooked_20864, "Members: Chambers of Xeric - Mycil fish");
			case 13 :
				return(60, raids_bat4_cooked_20879, "Members: Chambers of Xeric - Kryket bat");
			case 14 :
				return(75, raids_fish5_cooked_20866, "Members: Chambers of Xeric - Roqed fish");
			case 15 :
				return(75, raids_bat5_cooked_20881, "Members: MChambers of Xeric - urng bat");
			case 16 :
				return(90, raids_fish6_cooked_20868, "Members: Chambers of Xeric - Kyren fish");
			case 17 :
				return(90, raids_bat6_cooked_20883, "Members: Chambers of Xeric - Psykk bat");
			case default :
				return(-1, null, "");
		}
}
return(-1, null, "");
