// 3850
[proc,settings_create_drop_down](int $int0, int $int1, int $int2, int $int3, int $trans4, struct $struct5, component $component6, component $component7, component $component8, component $component9, component $component10, component $component11, component $component12, component $component13, component $component14)(int, int, int, int)
def_enum $enum15 = ~script7106(struct_param($struct5, param_1077));
def_boolean $boolean16 = ~on_mobile;
if ($enum15 = null) {
	$enum15 = struct_param($struct5, param_1091);
	if ($boolean16 = true & struct_param($struct5, param_1092) ! null) {
		$enum15 = struct_param($struct5, param_1092);
	}
}
if ($enum15 = null) {
	cc_create($component6, ^iftype_rectangle, $int3);
	cc_sethide(true);
	$int3 = calc($int3 + 1);
	return($int0, $int1, $int2, $int3);
}
def_int $int17 = calc(parawidth(enum(int, string, $enum15, ^max_32bit_int), 1000, p12_full) + 14);
def_int $int18 = calc($int17 + 20);
def_string $string0 = struct_param($struct5, param_1086);
if ($boolean16 = true & string_length(struct_param($struct5, param_1087)) > 0) {
	$string0 = struct_param($struct5, param_1087);
}
def_string $string1 = struct_param($struct5, param_1096);
def_int $int19 = 0;
def_int $int20 = %varbit9665;
def_boolean $boolean21 = struct_param($struct5, param_1119);
if ($boolean16 = true & string_length(struct_param($struct5, param_1097)) > 0) {
	$string1 = struct_param($struct5, param_1097);
}
if (string_length($string1) > 0) {
	$int19 = calc(paraheight($string1, calc(if_getwidth($component7) - ($int18 + 25)), p12_full) * 14);
}
$int1 = calc($int1 + $int19);
if ($int20 = 1 | $boolean21 = true) {
	$int19 = 0;
}
def_int $int22 = calc(paraheight($string0, calc(if_getwidth($component7) - ($int18 + 25)), b12_full) * 14);
if ($boolean16 = true & $int22 < 20) {
	$int22 = 20;
}
def_int $int23 = calc($int22 + 12 + $int19);
def_boolean $boolean24 = struct_param($struct5, param_1085);
def_boolean $boolean25 = ~script3957($struct5);
cc_create($component7, ^iftype_rectangle, $int2);
cc_setsize(10, $int23, ^setsize_minus, ^setsize_abs);
cc_setposition(0, $int0, ^setpos_abs_centre, ^setpos_abs_top);
cc_setfill(true);
cc_setcolour(^black);
cc_settrans($trans4);
$int2 = calc($int2 + 1);
cc_create($component7, ^iftype_text, $int2);
cc_setsize(calc($int18 + 25), $int22, ^setsize_minus, ^setsize_abs);
cc_setposition(10, calc($int0 + 6), ^setpos_abs_left, ^setpos_abs_top);
cc_settext($string0);
cc_settextfont(b12_full);
cc_settextshadow(true);
if ($boolean25 = true) {
	cc_setcolour(0xff981f);
} else {
	cc_setcolour(0x9f9f9f);
}
if ($boolean16 = false & $int20 = 1 & string_length($string1) > 0) {
	cc_setonmouserepeat("tooltip_mouserepeat($component7, $int2, $component14, $string1, 25, 190)");
	cc_setonmouseleave("deltooltip($component14)");
}
cc_settextalign(^settextalign_left, ^settextalign_centre, 14);
$int2 = calc($int2 + 1);
cc_create($component7, ^iftype_graphic, $int2);
$int2 = calc($int2 + 1);
cc_setsize($int18, 20, ^setsize_abs, ^setsize_abs);
cc_setposition(10, calc($int0 + ($int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top);
cc_setgraphic(tradebacking);
cc_settiling(true);
cc_create($component7, ^iftype_rectangle, $int2);
$int2 = calc($int2 + 1);
cc_setsize($int18, 20, ^setsize_abs, ^setsize_abs);
cc_setposition(10, calc($int0 + ($int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top);
cc_setfill(false);
cc_setcolour(0x0e0e0c);
cc_create($component7, ^iftype_rectangle, $int2);
$int2 = calc($int2 + 1);
cc_setsize(calc($int18 - 2), 18, ^setsize_abs, ^setsize_abs);
cc_setposition(11, calc($int0 + ($int23 / 2 - 9)), ^setpos_abs_right, ^setpos_abs_top);
cc_setfill(false);
cc_setcolour(0x474745);
cc_create($component7, ^iftype_graphic, $int2);
def_int $comsubid26 = $int2;
$int2 = calc($int2 + 1);
cc_setsize(16, 16, ^setsize_abs, ^setsize_abs);
cc_setposition(12, calc($int0 + ($int23 / 2 - 8)), ^setpos_abs_right, ^setpos_abs_top);
cc_setgraphic("scrollbar_v2,1");
cc_create($component7, ^iftype_text, $int2);
$int2 = calc($int2 + 1);
cc_setsize($int17, 16, ^setsize_abs, ^setsize_abs);
cc_setposition(28, calc($int0 + ($int23 / 2 - 8)), ^setpos_abs_right, ^setpos_abs_top);
cc_settextfont(p12_full);
if ($boolean25 = true) {
	cc_setcolour(0xff981f);
} else {
	cc_setcolour(0x9f9f9f);
}
cc_settextshadow(true);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
def_int $int27 = struct_param($struct5, param_1077);
cc_settext(enum(int, string, $enum15, ~settings_get_dropdown($int27)));
cc_create($component6, ^iftype_rectangle, $int3);
$int3 = calc($int3 + 1);
cc_setsize($int18, 20, ^setsize_abs, ^setsize_abs);
cc_setposition(10, calc($int0 + ($int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top);
cc_setfill(true);
cc_setcolour(^black);
cc_settrans(255);
cc_setop(1, "Select");
cc_setonop("setting_show_dropdown(
	0 = 2, 
	1 = $struct5, 
	2 = $component7, 
	3 = calc($int2 - 1), 
	4 = $enum15, 
	5 = $int18, 
	6 = 20, 
	7 = cc_getx, 
	8 = cc_gety, 
	9 = $component8, 
	10 = $component9, 
	11 = $component10, 
	12 = $component11, 
	13 = $component12, 
	14 = $component13, 
	15 = $comsubid26, 
	16 = $boolean24
)");
cc_create($component7, ^iftype_rectangle, $int2);
cc_setsize($int18, 20, ^setsize_abs, ^setsize_abs);
cc_setposition(10, calc($int0 + ($int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top);
cc_setfill(true);
cc_setcolour(^black);
cc_settrans(255);
if ($boolean24 = true) {
	~settings_dropdown_choose_transmit(
		0 = 2, 
		1 = $struct5, 
		2 = calc($int2 - 1), 
		3 = calc($int2 - 6), 
		4 = $int2, 
		5 = $component7, 
		6 = $enum15, 
		7 = $int27, 
		8 = $component8, 
		9 = $component9, 
		10 = $component10, 
		11 = $component11, 
		12 = $component13
	);
}
if ($boolean25 = true & ~on_mobile = false) {
	cc_setonmouseover("cc_settrans($component7, $int2, 220, null)");
	cc_setonmouseleave("cc_settrans($component7, $int2, 255, null)");
}
$int2 = calc($int2 + 1);
if ($boolean21 = false & $int20 = 0 & $int19 > 0) {
	cc_create($component7, ^iftype_text, $int2);
	cc_setsize(calc($int18 + 25), $int19, ^setsize_minus, ^setsize_abs);
	cc_setposition(10, calc($int0 + 6 + $int22), ^setpos_abs_left, ^setpos_abs_top);
	cc_settext($string1);
	cc_settextfont(p12_full);
	cc_settextshadow(true);
	cc_setcolour(0x9f9f9f);
	cc_settextalign(^settextalign_left, ^settextalign_centre, 14);
	$int2 = calc($int2 + 1);
}
$int0 = calc($int23 + $int0);
return($int0, $int1, $int2, $int3);
